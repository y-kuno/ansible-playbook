---
- name: add repository 'erlang_solutions'
  command: {{ item }}
  with_items:
    - "wget http://packages.erlang-solutions.com/erlang-solutions-1.0-1.noarch.rpm"
    - "rpm -Uvh erlang-solutions-1.0-1.noarch.rpm"

- name: install erlang
  yum: name=erlang state=present

- name: install rabbitmq-server
  yum: name={{ rabbitmq_server_url }} state=present

- name: start on boot rabbitmq-server
  service: name=rabbitmq-server enabled=yes

- include: ssl.yml
  when: rabbitmq_ssl_use

- name: create rabbitmq conf
  template: src=rabbitmq.conf.j2 dest=/etc/rabbitmq/rabbitmq.conf owner={{ rabbitmq_user }} group={{ rabbitmq_group }} mode=0644
  notify: restart rabbitmq-server

- name: enable rabbitmq plugins
  rabbitmq_plugin: names={{ item }} new_only=no state=enabled
  with_items: "{{ rabbitmq_plugins }}"
  notify: restart rabbitmq-server
  when: rabbitmq_plugins is defined

- name: get enable rabbitmq plugins
  command: rabbitmq-plugins list -e -m
  register: plugins
  when: rabbitmq_plugins is undefined

- name: disable rabbitmq plugins
  rabbitmq_plugin: names={{ item }} new_only=no state=disabled
  with_items: plugins.stdout_lines
  notify: restart rabbitmq-server
  when: rabbitmq_plugins is undefined

- name: start rabbitmq-server
  service: name=rabbitmq-server state=started

- name: add vhost
  rabbitmq_vhost: name={{ item.vhost }} node={{ item.node | default('rabbit') }}
                  tracing={{ item.tracing | default('no') }} state=present
  with_items: "{{ rabbitmq_components }}"

- name: add user
  rabbitmq_user: user={{ item.user }} password={{ item.password }} vhost={{ item.vhost }}
                 node={{ item.node | default('rabbit') }} tags={{ (item.tags | default('')) | join(',') }}
                 configure_priv=.* read_priv=.* write_priv=.* state=present force={{ item.force | default('yes') }}
  with_items: "{{ rabbitmq_components }}"
